# Name of your application. Used to uniquely configure containers.
service: pvq-app

# Name of the container image.
image: servicestack/pvq.app

env:
  clear:
    VIRTUAL_HOST: pvq.app
  secret:
    - REDDIT_CLIENT
    - REDDIT_SECRET
    - R2_ACCOUNT_ID
    - R2_ACCESS_KEY_ID
    - R2_SECRET_ACCESS_KEY


# Deploy to these servers.
servers:
  web:
    - 5.78.128.205
  # job:
  #   hosts:
  #     - 192.168.0.1
  #   cmd: bin/jobs

# Enable SSL auto certification via Let's Encrypt (and allow for multiple apps on one server).
proxy:
  ssl: true
  host: pvq.app
  # kamal-proxy connects to your container over port 80, use `app_port` to specify a different port.
  app_port: 8080
  response_timeout: 300
  # kamal-proxy connects to your container over port 80, use `app_port` to specify a different port.
  # app_port: 3000

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  server: ghcr.io
  username:
    - KAMAL_REGISTRY_USERNAME

  # Always use an access token rather than real password (pulled from .kamal/secrets).
  password:
    - KAMAL_REGISTRY_PASSWORD

# Configure builder setup.
builder:
  arch: amd64

volumes:
  - "/opt/docker/pvq.app/App_Data:/app/App_Data"

accessories:
  litestream:
    roles: ["web"]
    image: litestream/litestream
    files: ["config/litestream.yml:/etc/litestream.yml"]
    volumes: ["/opt/docker/pvq.app/App_Data:/data"]
    cmd: replicate
    env:
      secret:
        - R2_ACCESS_KEY_ID
        - R2_SECRET_ACCESS_KEY
