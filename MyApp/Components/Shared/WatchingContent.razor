@using MyApp.Data
@using MyApp.ServiceInterface.App
@using ServiceStack.Jobs
@inject IDbConnectionFactory DbFactory
@inject IBackgroundJobs Jobs

@if (Watching != null && HttpContext?.User.GetUserName() != null)
{
    @if (Unsubscribe == true)
    {
        <Alert class="mb-2" Type="AlertType.Success">You've unsubscribed to this @Type.ToLower()</Alert>
    }
    
    <div id="watching" class="w-80" data-postid=@PostId data-tag=@Tag data-type=@Type data-watching=@(Watching.Value ? "on" : "off")>
        <b class="text-xs">Notifications</b>
        <div class="my-2">
            <button class=@ButtonClass("off") onclick="toggleWatching()">
                <svg class="w-4 h-4 mr-1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="currentColor" fill-rule="evenodd" d="M8 1a1 1 0 0 0-1 1v.1A5 5 0 0 0 3 7v4l-1.205 1.328c-.583.643-.127 1.672.74 1.672h3.733a2 2 0 0 0 3.464 0h3.733c.867 0 1.323-1.03.74-1.672L13 11V7a5 5 0 0 0-4-4.9V2a1 1 0 0 0-1-1M4.5 11.58l-.39.428l-.446.492h8.672l-.447-.492l-.389-.429V7a3.5 3.5 0 1 0-7 0z" clip-rule="evenodd"/></svg>
                Subscribe
            </button>
            <button class=@ButtonClass("on") onclick="toggleWatching()">
                <svg class="w-4 h-4 mr-1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="currentColor" fill-rule="evenodd" d="M8 1a1 1 0 0 0-1 1v.1A5 5 0 0 0 3 7v4.94l-1.78 1.78a.75.75 0 1 0 1.06 1.06L14.776 2.284a.75.75 0 0 0-1.06-1.06l-2.211 2.21A5 5 0 0 0 9 2.1V2a1 1 0 0 0-1-1m0 2.5c.95 0 1.813.379 2.444.995L4.5 10.439V7A3.5 3.5 0 0 1 8 3.5m5 4.25a.75.75 0 0 0-1.5 0v3.817l.194.214l.65.719H6.75a.75.75 0 0 0-.728.932l.011.043A2.02 2.02 0 0 0 7.993 15c.737 0 1.389-.4 1.738-1h3.74c.868 0 1.324-1.028.742-1.671L13 10.989z" clip-rule="evenodd"/></svg>
                Unsubscribe
            </button>
        </div>
        <p class="off text-gray-500 text-sm">
            You’re not receiving notifications from this <span>@Type</span>.
        </p>
        <p class="on text-gray-500 text-sm">
            You’re receiving notifications because you’re watching this <span>@Type.ToLower()</span>.
        </p>
    </div>
}
    
@code {
    [CascadingParameter] public HttpContext? HttpContext { get; set; }

    string ButtonClass(string cls) => 
        CssUtils.ClassNames(SecondaryButton.Classes.Replace("py-2", "py-1"), cls, "w-full items-center");
    
    [Parameter] public int? PostId { get; set; }
    [Parameter] public string? Tag { get; set; }
    [Parameter] public bool? Unsubscribe { get; set; }

    string Type => PostId != null ? nameof(Post) : nameof(Tag);
    
    bool? Watching { get; set; }
    protected override async Task OnInitializedAsync()
    {
        var userName = HttpContext.GetUserName();
        if (userName == null)
            return;

        using var db = await DbFactory.OpenAsync();
        Watching = PostId != null
            ? await db.IsWatchingPostAsync(userName, PostId)
            : Tag != null 
                ? await db.IsWatchingTagAsync(userName, Tag)
                : null;

        if (Unsubscribe == true)
        {
            if (PostId != null)
            {
                Jobs.RunCommand<PostSubscriptionsCommand>(new PostSubscriptions {
                    UserName = userName,
                    Unsubscriptions = [PostId.Value]
                });
                Watching = false;
            }
            else if (Tag != null)
            {
                Jobs.RunCommand<TagSubscriptionsCommand>(new TagSubscriptions {
                    UserName = userName,
                    Unsubscriptions = [Tag]
                });
                Watching = false;
            }
        }
    }
}
