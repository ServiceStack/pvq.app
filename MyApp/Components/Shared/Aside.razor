@inject MarkdownBlog Blog

<div class="w-60 lg:w-80">
    @if (PostId != null || Tag != null)
    {
        <div class="mb-16">
            <WatchingContent PostId=@PostId Tag=@Tag Unsubscribe=@Unsubscribe />
        </div>
    }
    <div class="overflow-hidden rounded-xl border border-gray-200">
        <div class="flex items-center gap-x-2 lg:gap-x-4 border-b border-gray-900/5 dark:border-gray-50/5 bg-gray-50 dark:bg-gray-900 p-3 lg:p-6">
            <svg class="h-10 w-10" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                <path fill="currentColor" d="M192 32c0 17.7 14.3 32 32 32c123.7 0 224 100.3 224 224c0 17.7 14.3 32 32 32s32-14.3 32-32C512 128.9 383.1 0 224 0c-17.7 0-32 14.3-32 32m0 96c0 17.7 14.3 32 32 32c70.7 0 128 57.3 128 128c0 17.7 14.3 32 32 32s32-14.3 32-32c0-106-86-192-192-192c-17.7 0-32 14.3-32 32m-96 16c0-26.5-21.5-48-48-48S0 117.5 0 144v224c0 79.5 64.5 144 144 144s144-64.5 144-144s-64.5-144-144-144h-16v96h16c26.5 0 48 21.5 48 48s-21.5 48-48 48s-48-21.5-48-48z"/>
            </svg>
            <div class="text-lg lg:text-2xl font-medium leading-6 text-gray-900 dark:text-gray-50">from the blog</div>
        </div>
        <dl class="-my-3 divide-y divide-gray-100 px-3 lg:px-6 py-2 lg:py-4 leading-6 text-sm lg:text-base">
            @foreach (var post in Blog.GetPosts().Take(3))
            {
                <div class="flex justify-between gap-x-4 py-3">
                    <NavLink href=@Blog.GetPostLink(post) class="text-indigo-700 dark:text-indigo-300 hover:text-indigo-500">@post.Title</NavLink>
                </div>
            }
        </dl>
    </div>

    @if (PostId == null && Tag == null)
    {
        <div class="mt-8" data-component="pages/components/WatchedTags.mjs"></div>
    }

</div>

@code {
    [Parameter] public int? PostId { get; set; }
    [Parameter] public string? Tag { get; set; }
    [Parameter] public bool? Unsubscribe { get; set; }
}