@page "/"
@inject RendererCache RendererCache
@inject IMessageProducer MessageProducer
@inject IDbConnectionFactory DbFactory

<PageTitle>pvq.app</PageTitle>

<div class="sm:flex flex-wrap justify-center px-2">
    <div>
        @if (Html != null)
        {
            @BlazorHtml.Raw(Html)
        }
        else
        {
            <HomeTab Tab=@Tab Posts=@Posts />
        }
    </div>
    <Aside />
</div>

@code {
    string? Html;

    [SupplyParameterFromQuery] 
    string? Tab { get; set; }

    List<Post> Posts { get; set; } = [];

    protected override async Task OnInitializedAsync()
    {
        Html = await RendererCache.GetHomeTabHtmlAsync(Tab);
        if (Html != null)
            return;
        
        using var db = await DbFactory.OpenAsync();
        var q = db.From<Post>();
        q.OrderByView(Tab);
        Posts = await db.SelectAsync(q.Take(50));
        
        MessageProducer.Publish(new RenderComponent {
            Home = new() {
                Tab = Tab,
                Posts = Posts,
            }
        });
    }
}
